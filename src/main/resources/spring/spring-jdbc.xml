<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans		http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context	http://www.springframework.org/schema/context/spring-context.xsd">

	<context:property-placeholder location="classpath:/spring/spring-config.properties" ignore-unresolvable="true" />
	
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="validationQuery" value="${jdbc.validationQuery}" />
		<property name="initialSize" value="1" />
		<property name="maxActive" value="10" />
		<property name="minIdle" value="1" />
		<property name="maxWait" value="60000" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="removeAbandonedTimeout" value="1800" />
		<property name="removeAbandoned" value="true" />
		<property name="logAbandoned" value="true" />
		<property name="proxyFilters">
			<list>
				<bean class="com.alibaba.druid.filter.stat.MergeStatFilter">
					<property name="slowSqlMillis" value="500" />
					<property name="logSlowSql" value="true" />
				</bean>
				<bean class="com.alibaba.druid.filter.logging.Slf4jLogFilter">
					<property name="statementExecutableSqlLogEnable" value="true" />
				</bean>
				<bean class="com.alibaba.druid.wall.WallFilter">
					<property name="logViolation" value="true" />
					<property name="throwException" value="true" />
				</bean>
			</list>
		</property>
	</bean>
	
<!-- 	<bean id="xaDataSource" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close"> -->
<!-- 		<property name="uniqueResourceName" value="mysql" /> -->
<!-- 		<property name="xaDataSourceClassName" value="com.alibaba.druid.pool.xa.DruidXADataSource" /> -->
<!-- 		<property name="xaProperties"> -->
<!-- 			<props> -->
<!-- 				<prop key="url">${jdbc.url}</prop> -->
<!-- 				<prop key="username">${jdbc.username}</prop> -->
<!-- 				<prop key="password">${jdbc.password}</prop> -->
<!-- 			</props> -->
<!-- 		</property> -->
<!-- 	</bean> -->
	
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="typeAliasesPackage" value="com.github.woshikid.mvc.model" />
		<property name="mapperLocations" value="classpath:/mappers/**/*.xml" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="plugins">
			<array>
				<bean class="com.github.pagehelper.PageHelper" />
				<bean class="com.github.woshikid.mvc.utils.CamelCaseInterceptor" />
			</array>
		</property>
	</bean>
	
	<bean class="tk.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<property name="basePackage" value="com.github.woshikid.mvc.dao" />
	</bean>
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
</beans>